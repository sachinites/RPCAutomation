Adding a New RPC Maually :
============================
1. Describe the structure layout and RPC prototype in c_struct.xml

2. execute c_struct.py

3. In file rpc_server_implementation.c, write the implementation of your actual RPC call. NO need to #include any structure/xdr header files. You can include external/standard header files

4. Add #include rpc_spec.h  file in test.c and call the RPC

5. rpc_server_usercode1.c/.h & rpc_server_common_usr.h are supporting files to enable the user to implement the server side RPC implementation. User can implemenent his user defined business logic in these files which are internal fnd of RPC call. You can define more such header files/.c files as per your will.

6. Edit the make file or compile.sh file to include new C auto generated C files. I have not spent too much time on Makefile to compile all auto generated files automatically. You need to make manual entry in compile.sh file as of now

7. Run ./server. In other terminal Run, ./client. rpc_spec.h contains the server ip address and port no. IF you want to change the server ip/port no, change it in c_struct.py and regenerate the code.

8. Done !! Pretty Easy, right ? Thats why i like developing Infra. 

9. execute clean.sh to clean up all auto generated Mess.

Note: We are not really using xdr protocol to encode and decode the data. Files are named keeping in mind that xdr would be employed later.
